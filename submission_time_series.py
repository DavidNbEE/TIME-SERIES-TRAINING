# -*- coding: utf-8 -*-
"""submission-time-series.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YOboDRHbcHVa502fEMniLKzOWbArbQk2
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense, Dropout
from tensorflow.keras.optimizers import Adam
from tensorflow.keras.callbacks import EarlyStopping
import matplotlib.pyplot as plt

dataset = pd.read_csv('/content/sample_data/raw_sales.csv')
dataset['datesold'] = pd.to_datetime(dataset['datesold'])
dataset.head()

print(dataset)

plt.figure(figsize=(12, 6))
plt.plot(dataset['datesold'], dataset['price'], label='Price')
plt.xlabel('Date Sold')
plt.ylabel('Price')
plt.title('Price Over Time')
plt.legend()
plt.grid(True)
plt.show()

scaler = MinMaxScaler()
scaled_data = scaler.fit_transform(dataset[['price', 'bedrooms']])

X = scaled_data[:, :-1]
y = scaled_data[:, -1]

min_value = scaled_data.min()
max_value = scaled_data.max()
data_range = max_value - min_value
threshold_mae = data_range * 0.1
print("Threshold MAE:", threshold_mae)

X_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, shuffle=False)

model = Sequential([
    LSTM(128, input_shape=(X_train.shape[1], 1), return_sequences=True),
    Dropout(0.2),
    LSTM(64, return_sequences=False),
    Dropout(0.2),
    Dense(32, activation='relu'),
    Dense(1)
])

model.compile(optimizer=Adam(learning_rate=0.0005), loss='mse', metrics=['mae'])
early_stopping = EarlyStopping(monitor='mae', mode='min', patience=3, restore_best_weights=True)

history = model.fit(X_train, y_train, epochs=100, batch_size=32, validation_data=(X_val, y_val), callbacks=[early_stopping])

plt.plot(history.history['loss'], label='Training Loss')
plt.plot(history.history['val_loss'], label='Validation Loss')
plt.title('Model Loss')
plt.xlabel('Epochs')
plt.ylabel('Loss')
plt.legend()
plt.show()